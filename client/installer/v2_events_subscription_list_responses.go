// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openshift/assisted-service/models"
)

// V2EventsSubscriptionListReader is a Reader for the V2EventsSubscriptionList structure.
type V2EventsSubscriptionListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2EventsSubscriptionListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV2EventsSubscriptionListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewV2EventsSubscriptionListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewV2EventsSubscriptionListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewV2EventsSubscriptionListMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewV2EventsSubscriptionListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewV2EventsSubscriptionListOK creates a V2EventsSubscriptionListOK with default headers values
func NewV2EventsSubscriptionListOK() *V2EventsSubscriptionListOK {
	return &V2EventsSubscriptionListOK{}
}

/* V2EventsSubscriptionListOK describes a response with status code 200, with default header values.

Success.
*/
type V2EventsSubscriptionListOK struct {
	Payload models.EventSubscriptionList
}

func (o *V2EventsSubscriptionListOK) Error() string {
	return fmt.Sprintf("[GET /v2/events/subscription][%d] v2EventsSubscriptionListOK  %+v", 200, o.Payload)
}
func (o *V2EventsSubscriptionListOK) GetPayload() models.EventSubscriptionList {
	return o.Payload
}

func (o *V2EventsSubscriptionListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2EventsSubscriptionListUnauthorized creates a V2EventsSubscriptionListUnauthorized with default headers values
func NewV2EventsSubscriptionListUnauthorized() *V2EventsSubscriptionListUnauthorized {
	return &V2EventsSubscriptionListUnauthorized{}
}

/* V2EventsSubscriptionListUnauthorized describes a response with status code 401, with default header values.

Unauthorized.
*/
type V2EventsSubscriptionListUnauthorized struct {
	Payload *models.InfraError
}

func (o *V2EventsSubscriptionListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/events/subscription][%d] v2EventsSubscriptionListUnauthorized  %+v", 401, o.Payload)
}
func (o *V2EventsSubscriptionListUnauthorized) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *V2EventsSubscriptionListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2EventsSubscriptionListForbidden creates a V2EventsSubscriptionListForbidden with default headers values
func NewV2EventsSubscriptionListForbidden() *V2EventsSubscriptionListForbidden {
	return &V2EventsSubscriptionListForbidden{}
}

/* V2EventsSubscriptionListForbidden describes a response with status code 403, with default header values.

Forbidden.
*/
type V2EventsSubscriptionListForbidden struct {
	Payload *models.InfraError
}

func (o *V2EventsSubscriptionListForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/events/subscription][%d] v2EventsSubscriptionListForbidden  %+v", 403, o.Payload)
}
func (o *V2EventsSubscriptionListForbidden) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *V2EventsSubscriptionListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2EventsSubscriptionListMethodNotAllowed creates a V2EventsSubscriptionListMethodNotAllowed with default headers values
func NewV2EventsSubscriptionListMethodNotAllowed() *V2EventsSubscriptionListMethodNotAllowed {
	return &V2EventsSubscriptionListMethodNotAllowed{}
}

/* V2EventsSubscriptionListMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed.
*/
type V2EventsSubscriptionListMethodNotAllowed struct {
	Payload *models.Error
}

func (o *V2EventsSubscriptionListMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /v2/events/subscription][%d] v2EventsSubscriptionListMethodNotAllowed  %+v", 405, o.Payload)
}
func (o *V2EventsSubscriptionListMethodNotAllowed) GetPayload() *models.Error {
	return o.Payload
}

func (o *V2EventsSubscriptionListMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2EventsSubscriptionListInternalServerError creates a V2EventsSubscriptionListInternalServerError with default headers values
func NewV2EventsSubscriptionListInternalServerError() *V2EventsSubscriptionListInternalServerError {
	return &V2EventsSubscriptionListInternalServerError{}
}

/* V2EventsSubscriptionListInternalServerError describes a response with status code 500, with default header values.

Error.
*/
type V2EventsSubscriptionListInternalServerError struct {
	Payload *models.Error
}

func (o *V2EventsSubscriptionListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v2/events/subscription][%d] v2EventsSubscriptionListInternalServerError  %+v", 500, o.Payload)
}
func (o *V2EventsSubscriptionListInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *V2EventsSubscriptionListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
