// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// V2EventsSubscriptionListOKCode is the HTTP code returned for type V2EventsSubscriptionListOK
const V2EventsSubscriptionListOKCode int = 200

/*V2EventsSubscriptionListOK Success.

swagger:response v2EventsSubscriptionListOK
*/
type V2EventsSubscriptionListOK struct {

	/*
	  In: Body
	*/
	Payload models.EventSubscriptionList `json:"body,omitempty"`
}

// NewV2EventsSubscriptionListOK creates V2EventsSubscriptionListOK with default headers values
func NewV2EventsSubscriptionListOK() *V2EventsSubscriptionListOK {

	return &V2EventsSubscriptionListOK{}
}

// WithPayload adds the payload to the v2 events subscription list o k response
func (o *V2EventsSubscriptionListOK) WithPayload(payload models.EventSubscriptionList) *V2EventsSubscriptionListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 events subscription list o k response
func (o *V2EventsSubscriptionListOK) SetPayload(payload models.EventSubscriptionList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2EventsSubscriptionListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.EventSubscriptionList{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// V2EventsSubscriptionListUnauthorizedCode is the HTTP code returned for type V2EventsSubscriptionListUnauthorized
const V2EventsSubscriptionListUnauthorizedCode int = 401

/*V2EventsSubscriptionListUnauthorized Unauthorized.

swagger:response v2EventsSubscriptionListUnauthorized
*/
type V2EventsSubscriptionListUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewV2EventsSubscriptionListUnauthorized creates V2EventsSubscriptionListUnauthorized with default headers values
func NewV2EventsSubscriptionListUnauthorized() *V2EventsSubscriptionListUnauthorized {

	return &V2EventsSubscriptionListUnauthorized{}
}

// WithPayload adds the payload to the v2 events subscription list unauthorized response
func (o *V2EventsSubscriptionListUnauthorized) WithPayload(payload *models.InfraError) *V2EventsSubscriptionListUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 events subscription list unauthorized response
func (o *V2EventsSubscriptionListUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2EventsSubscriptionListUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2EventsSubscriptionListForbiddenCode is the HTTP code returned for type V2EventsSubscriptionListForbidden
const V2EventsSubscriptionListForbiddenCode int = 403

/*V2EventsSubscriptionListForbidden Forbidden.

swagger:response v2EventsSubscriptionListForbidden
*/
type V2EventsSubscriptionListForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewV2EventsSubscriptionListForbidden creates V2EventsSubscriptionListForbidden with default headers values
func NewV2EventsSubscriptionListForbidden() *V2EventsSubscriptionListForbidden {

	return &V2EventsSubscriptionListForbidden{}
}

// WithPayload adds the payload to the v2 events subscription list forbidden response
func (o *V2EventsSubscriptionListForbidden) WithPayload(payload *models.InfraError) *V2EventsSubscriptionListForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 events subscription list forbidden response
func (o *V2EventsSubscriptionListForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2EventsSubscriptionListForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2EventsSubscriptionListMethodNotAllowedCode is the HTTP code returned for type V2EventsSubscriptionListMethodNotAllowed
const V2EventsSubscriptionListMethodNotAllowedCode int = 405

/*V2EventsSubscriptionListMethodNotAllowed Method Not Allowed.

swagger:response v2EventsSubscriptionListMethodNotAllowed
*/
type V2EventsSubscriptionListMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2EventsSubscriptionListMethodNotAllowed creates V2EventsSubscriptionListMethodNotAllowed with default headers values
func NewV2EventsSubscriptionListMethodNotAllowed() *V2EventsSubscriptionListMethodNotAllowed {

	return &V2EventsSubscriptionListMethodNotAllowed{}
}

// WithPayload adds the payload to the v2 events subscription list method not allowed response
func (o *V2EventsSubscriptionListMethodNotAllowed) WithPayload(payload *models.Error) *V2EventsSubscriptionListMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 events subscription list method not allowed response
func (o *V2EventsSubscriptionListMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2EventsSubscriptionListMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2EventsSubscriptionListInternalServerErrorCode is the HTTP code returned for type V2EventsSubscriptionListInternalServerError
const V2EventsSubscriptionListInternalServerErrorCode int = 500

/*V2EventsSubscriptionListInternalServerError Error.

swagger:response v2EventsSubscriptionListInternalServerError
*/
type V2EventsSubscriptionListInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2EventsSubscriptionListInternalServerError creates V2EventsSubscriptionListInternalServerError with default headers values
func NewV2EventsSubscriptionListInternalServerError() *V2EventsSubscriptionListInternalServerError {

	return &V2EventsSubscriptionListInternalServerError{}
}

// WithPayload adds the payload to the v2 events subscription list internal server error response
func (o *V2EventsSubscriptionListInternalServerError) WithPayload(payload *models.Error) *V2EventsSubscriptionListInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 events subscription list internal server error response
func (o *V2EventsSubscriptionListInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2EventsSubscriptionListInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
