// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// V2EventsSubscriptionDeleteNoContentCode is the HTTP code returned for type V2EventsSubscriptionDeleteNoContent
const V2EventsSubscriptionDeleteNoContentCode int = 204

/*V2EventsSubscriptionDeleteNoContent Success.

swagger:response v2EventsSubscriptionDeleteNoContent
*/
type V2EventsSubscriptionDeleteNoContent struct {
}

// NewV2EventsSubscriptionDeleteNoContent creates V2EventsSubscriptionDeleteNoContent with default headers values
func NewV2EventsSubscriptionDeleteNoContent() *V2EventsSubscriptionDeleteNoContent {

	return &V2EventsSubscriptionDeleteNoContent{}
}

// WriteResponse to the client
func (o *V2EventsSubscriptionDeleteNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// V2EventsSubscriptionDeleteUnauthorizedCode is the HTTP code returned for type V2EventsSubscriptionDeleteUnauthorized
const V2EventsSubscriptionDeleteUnauthorizedCode int = 401

/*V2EventsSubscriptionDeleteUnauthorized Unauthorized.

swagger:response v2EventsSubscriptionDeleteUnauthorized
*/
type V2EventsSubscriptionDeleteUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewV2EventsSubscriptionDeleteUnauthorized creates V2EventsSubscriptionDeleteUnauthorized with default headers values
func NewV2EventsSubscriptionDeleteUnauthorized() *V2EventsSubscriptionDeleteUnauthorized {

	return &V2EventsSubscriptionDeleteUnauthorized{}
}

// WithPayload adds the payload to the v2 events subscription delete unauthorized response
func (o *V2EventsSubscriptionDeleteUnauthorized) WithPayload(payload *models.InfraError) *V2EventsSubscriptionDeleteUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 events subscription delete unauthorized response
func (o *V2EventsSubscriptionDeleteUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2EventsSubscriptionDeleteUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2EventsSubscriptionDeleteForbiddenCode is the HTTP code returned for type V2EventsSubscriptionDeleteForbidden
const V2EventsSubscriptionDeleteForbiddenCode int = 403

/*V2EventsSubscriptionDeleteForbidden Forbidden.

swagger:response v2EventsSubscriptionDeleteForbidden
*/
type V2EventsSubscriptionDeleteForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewV2EventsSubscriptionDeleteForbidden creates V2EventsSubscriptionDeleteForbidden with default headers values
func NewV2EventsSubscriptionDeleteForbidden() *V2EventsSubscriptionDeleteForbidden {

	return &V2EventsSubscriptionDeleteForbidden{}
}

// WithPayload adds the payload to the v2 events subscription delete forbidden response
func (o *V2EventsSubscriptionDeleteForbidden) WithPayload(payload *models.InfraError) *V2EventsSubscriptionDeleteForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 events subscription delete forbidden response
func (o *V2EventsSubscriptionDeleteForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2EventsSubscriptionDeleteForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2EventsSubscriptionDeleteNotFoundCode is the HTTP code returned for type V2EventsSubscriptionDeleteNotFound
const V2EventsSubscriptionDeleteNotFoundCode int = 404

/*V2EventsSubscriptionDeleteNotFound Error.

swagger:response v2EventsSubscriptionDeleteNotFound
*/
type V2EventsSubscriptionDeleteNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2EventsSubscriptionDeleteNotFound creates V2EventsSubscriptionDeleteNotFound with default headers values
func NewV2EventsSubscriptionDeleteNotFound() *V2EventsSubscriptionDeleteNotFound {

	return &V2EventsSubscriptionDeleteNotFound{}
}

// WithPayload adds the payload to the v2 events subscription delete not found response
func (o *V2EventsSubscriptionDeleteNotFound) WithPayload(payload *models.Error) *V2EventsSubscriptionDeleteNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 events subscription delete not found response
func (o *V2EventsSubscriptionDeleteNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2EventsSubscriptionDeleteNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2EventsSubscriptionDeleteMethodNotAllowedCode is the HTTP code returned for type V2EventsSubscriptionDeleteMethodNotAllowed
const V2EventsSubscriptionDeleteMethodNotAllowedCode int = 405

/*V2EventsSubscriptionDeleteMethodNotAllowed Method Not Allowed.

swagger:response v2EventsSubscriptionDeleteMethodNotAllowed
*/
type V2EventsSubscriptionDeleteMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2EventsSubscriptionDeleteMethodNotAllowed creates V2EventsSubscriptionDeleteMethodNotAllowed with default headers values
func NewV2EventsSubscriptionDeleteMethodNotAllowed() *V2EventsSubscriptionDeleteMethodNotAllowed {

	return &V2EventsSubscriptionDeleteMethodNotAllowed{}
}

// WithPayload adds the payload to the v2 events subscription delete method not allowed response
func (o *V2EventsSubscriptionDeleteMethodNotAllowed) WithPayload(payload *models.Error) *V2EventsSubscriptionDeleteMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 events subscription delete method not allowed response
func (o *V2EventsSubscriptionDeleteMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2EventsSubscriptionDeleteMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2EventsSubscriptionDeleteInternalServerErrorCode is the HTTP code returned for type V2EventsSubscriptionDeleteInternalServerError
const V2EventsSubscriptionDeleteInternalServerErrorCode int = 500

/*V2EventsSubscriptionDeleteInternalServerError Error.

swagger:response v2EventsSubscriptionDeleteInternalServerError
*/
type V2EventsSubscriptionDeleteInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2EventsSubscriptionDeleteInternalServerError creates V2EventsSubscriptionDeleteInternalServerError with default headers values
func NewV2EventsSubscriptionDeleteInternalServerError() *V2EventsSubscriptionDeleteInternalServerError {

	return &V2EventsSubscriptionDeleteInternalServerError{}
}

// WithPayload adds the payload to the v2 events subscription delete internal server error response
func (o *V2EventsSubscriptionDeleteInternalServerError) WithPayload(payload *models.Error) *V2EventsSubscriptionDeleteInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 events subscription delete internal server error response
func (o *V2EventsSubscriptionDeleteInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2EventsSubscriptionDeleteInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
